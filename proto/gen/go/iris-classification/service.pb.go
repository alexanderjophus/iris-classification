// Code generated by protoc-gen-go. DO NOT EDIT.
// source: iris-classification/service.proto

package irisclassificationpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// petal length, petal width, sepal length, sepal width
type PredictRequest struct {
	PetalLength          float32  `protobuf:"fixed32,1,opt,name=petal_length,json=petalLength,proto3" json:"petal_length,omitempty"`
	PetalWidth           float32  `protobuf:"fixed32,2,opt,name=petal_width,json=petalWidth,proto3" json:"petal_width,omitempty"`
	SepalLength          float32  `protobuf:"fixed32,3,opt,name=sepal_length,json=sepalLength,proto3" json:"sepal_length,omitempty"`
	SepalWidth           float32  `protobuf:"fixed32,4,opt,name=sepal_width,json=sepalWidth,proto3" json:"sepal_width,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PredictRequest) Reset()         { *m = PredictRequest{} }
func (m *PredictRequest) String() string { return proto.CompactTextString(m) }
func (*PredictRequest) ProtoMessage()    {}
func (*PredictRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_01e4f551fb7553d1, []int{0}
}

func (m *PredictRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PredictRequest.Unmarshal(m, b)
}
func (m *PredictRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PredictRequest.Marshal(b, m, deterministic)
}
func (m *PredictRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PredictRequest.Merge(m, src)
}
func (m *PredictRequest) XXX_Size() int {
	return xxx_messageInfo_PredictRequest.Size(m)
}
func (m *PredictRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PredictRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PredictRequest proto.InternalMessageInfo

func (m *PredictRequest) GetPetalLength() float32 {
	if m != nil {
		return m.PetalLength
	}
	return 0
}

func (m *PredictRequest) GetPetalWidth() float32 {
	if m != nil {
		return m.PetalWidth
	}
	return 0
}

func (m *PredictRequest) GetSepalLength() float32 {
	if m != nil {
		return m.SepalLength
	}
	return 0
}

func (m *PredictRequest) GetSepalWidth() float32 {
	if m != nil {
		return m.SepalWidth
	}
	return 0
}

type PredictResponse struct {
	Predicition          string   `protobuf:"bytes,1,opt,name=predicition,proto3" json:"predicition,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PredictResponse) Reset()         { *m = PredictResponse{} }
func (m *PredictResponse) String() string { return proto.CompactTextString(m) }
func (*PredictResponse) ProtoMessage()    {}
func (*PredictResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01e4f551fb7553d1, []int{1}
}

func (m *PredictResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PredictResponse.Unmarshal(m, b)
}
func (m *PredictResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PredictResponse.Marshal(b, m, deterministic)
}
func (m *PredictResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PredictResponse.Merge(m, src)
}
func (m *PredictResponse) XXX_Size() int {
	return xxx_messageInfo_PredictResponse.Size(m)
}
func (m *PredictResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PredictResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PredictResponse proto.InternalMessageInfo

func (m *PredictResponse) GetPredicition() string {
	if m != nil {
		return m.Predicition
	}
	return ""
}

func init() {
	proto.RegisterType((*PredictRequest)(nil), "irisclassification.PredictRequest")
	proto.RegisterType((*PredictResponse)(nil), "irisclassification.PredictResponse")
}

func init() {
	proto.RegisterFile("iris-classification/service.proto", fileDescriptor_01e4f551fb7553d1)
}

var fileDescriptor_01e4f551fb7553d1 = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0xe9, 0x2a, 0x8a, 0xb3, 0xa2, 0x10, 0x44, 0x56, 0x2f, 0xee, 0xd6, 0x8b, 0x17, 0x2b,
	0xd8, 0x37, 0xd0, 0x93, 0xe0, 0x41, 0xe2, 0x41, 0xf0, 0x52, 0xda, 0x74, 0xb4, 0x03, 0xa5, 0x89,
	0x99, 0xa8, 0xaf, 0xe2, 0xe3, 0x4a, 0x26, 0x62, 0x2d, 0x05, 0x8f, 0xf9, 0xf8, 0xf8, 0x98, 0xfc,
	0xb0, 0x21, 0x4f, 0x7c, 0x69, 0xfa, 0x9a, 0x99, 0x5e, 0xc8, 0xd4, 0x81, 0xec, 0x70, 0xc5, 0xe8,
	0x3f, 0xc8, 0x60, 0xe1, 0xbc, 0x0d, 0x56, 0xa9, 0xa8, 0x4c, 0x8d, 0xfc, 0x2b, 0x83, 0x83, 0x07,
	0x8f, 0x2d, 0x99, 0xa0, 0xf1, 0xed, 0x1d, 0x39, 0xa8, 0x0d, 0xec, 0x3b, 0x0c, 0x75, 0x5f, 0xf5,
	0x38, 0xbc, 0x86, 0x6e, 0x95, 0xad, 0xb3, 0x8b, 0x85, 0x5e, 0x0a, 0xbb, 0x17, 0xa4, 0xce, 0x20,
	0x3d, 0xab, 0x4f, 0x6a, 0x43, 0xb7, 0x5a, 0x88, 0x01, 0x82, 0x9e, 0x22, 0x89, 0x0d, 0x46, 0x37,
	0x36, 0xb6, 0x52, 0x43, 0xd8, 0xd8, 0x48, 0x4a, 0x6a, 0x6c, 0xa7, 0x86, 0x20, 0x69, 0xe4, 0x25,
	0x1c, 0xfe, 0x5e, 0xc6, 0xce, 0x0e, 0x8c, 0x6a, 0x0d, 0x4b, 0x27, 0x88, 0xe2, 0xf1, 0x72, 0xd9,
	0x9e, 0xfe, 0x8b, 0xae, 0x2d, 0x9c, 0xdc, 0x79, 0xe2, 0xdb, 0xc9, 0x2f, 0x1f, 0xd3, 0x0c, 0x4a,
	0xc3, 0xee, 0x4f, 0x51, 0xe5, 0xc5, 0x7c, 0x8c, 0x62, 0x3a, 0xc4, 0xe9, 0xf9, 0xbf, 0x4e, 0x3a,
	0xe9, 0xe6, 0xf8, 0xf9, 0x68, 0x6e, 0xb9, 0xa6, 0xd9, 0x91, 0xcd, 0xcb, 0xef, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x4f, 0x85, 0x45, 0x45, 0x98, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IrisClassificationServiceClient is the client API for IrisClassificationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IrisClassificationServiceClient interface {
	// Predict the Iris Classification
	Predict(ctx context.Context, in *PredictRequest, opts ...grpc.CallOption) (*PredictResponse, error)
}

type irisClassificationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewIrisClassificationServiceClient(cc grpc.ClientConnInterface) IrisClassificationServiceClient {
	return &irisClassificationServiceClient{cc}
}

func (c *irisClassificationServiceClient) Predict(ctx context.Context, in *PredictRequest, opts ...grpc.CallOption) (*PredictResponse, error) {
	out := new(PredictResponse)
	err := c.cc.Invoke(ctx, "/irisclassification.IrisClassificationService/Predict", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IrisClassificationServiceServer is the server API for IrisClassificationService service.
type IrisClassificationServiceServer interface {
	// Predict the Iris Classification
	Predict(context.Context, *PredictRequest) (*PredictResponse, error)
}

// UnimplementedIrisClassificationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedIrisClassificationServiceServer struct {
}

func (*UnimplementedIrisClassificationServiceServer) Predict(ctx context.Context, req *PredictRequest) (*PredictResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Predict not implemented")
}

func RegisterIrisClassificationServiceServer(s *grpc.Server, srv IrisClassificationServiceServer) {
	s.RegisterService(&_IrisClassificationService_serviceDesc, srv)
}

func _IrisClassificationService_Predict_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PredictRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IrisClassificationServiceServer).Predict(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/irisclassification.IrisClassificationService/Predict",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IrisClassificationServiceServer).Predict(ctx, req.(*PredictRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IrisClassificationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "irisclassification.IrisClassificationService",
	HandlerType: (*IrisClassificationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Predict",
			Handler:    _IrisClassificationService_Predict_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "iris-classification/service.proto",
}
