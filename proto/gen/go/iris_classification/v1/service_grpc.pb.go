// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package irisclassificationpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// IrisClassificationServiceClient is the client API for IrisClassificationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type IrisClassificationServiceClient interface {
	// Predict the Iris Classification
	Predict(ctx context.Context, in *PredictRequest, opts ...grpc.CallOption) (*PredictResponse, error)
}

type irisClassificationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewIrisClassificationServiceClient(cc grpc.ClientConnInterface) IrisClassificationServiceClient {
	return &irisClassificationServiceClient{cc}
}

func (c *irisClassificationServiceClient) Predict(ctx context.Context, in *PredictRequest, opts ...grpc.CallOption) (*PredictResponse, error) {
	out := new(PredictResponse)
	err := c.cc.Invoke(ctx, "/irisclassification.IrisClassificationService/Predict", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IrisClassificationServiceServer is the server API for IrisClassificationService service.
// All implementations must embed UnimplementedIrisClassificationServiceServer
// for forward compatibility
type IrisClassificationServiceServer interface {
	// Predict the Iris Classification
	Predict(context.Context, *PredictRequest) (*PredictResponse, error)
	mustEmbedUnimplementedIrisClassificationServiceServer()
}

// UnimplementedIrisClassificationServiceServer must be embedded to have forward compatible implementations.
type UnimplementedIrisClassificationServiceServer struct {
}

func (UnimplementedIrisClassificationServiceServer) Predict(context.Context, *PredictRequest) (*PredictResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Predict not implemented")
}
func (UnimplementedIrisClassificationServiceServer) mustEmbedUnimplementedIrisClassificationServiceServer() {
}

// UnsafeIrisClassificationServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to IrisClassificationServiceServer will
// result in compilation errors.
type UnsafeIrisClassificationServiceServer interface {
	mustEmbedUnimplementedIrisClassificationServiceServer()
}

func RegisterIrisClassificationServiceServer(s grpc.ServiceRegistrar, srv IrisClassificationServiceServer) {
	s.RegisterService(&IrisClassificationService_ServiceDesc, srv)
}

func _IrisClassificationService_Predict_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PredictRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IrisClassificationServiceServer).Predict(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/irisclassification.IrisClassificationService/Predict",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IrisClassificationServiceServer).Predict(ctx, req.(*PredictRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// IrisClassificationService_ServiceDesc is the grpc.ServiceDesc for IrisClassificationService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var IrisClassificationService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "irisclassification.IrisClassificationService",
	HandlerType: (*IrisClassificationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Predict",
			Handler:    _IrisClassificationService_Predict_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "iris-classification/v1/service.proto",
}
